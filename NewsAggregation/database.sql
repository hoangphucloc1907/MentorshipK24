use NewsAggregator;

CREATE TABLE Users (
    UserID INT IDENTITY(1,1) PRIMARY KEY,
    Username NVARCHAR(255),
    Email NVARCHAR(255),
    Password NVARCHAR(255),
    Role NVARCHAR(50)
);

CREATE TABLE CategoryTag (
    CategoryTagID INT IDENTITY(1,1) PRIMARY KEY,
    CategoryName NVARCHAR(255)
);

CREATE TABLE Tags (
    TagID INT IDENTITY(1,1) PRIMARY KEY,
    CategoryTagID INT FOREIGN KEY REFERENCES CategoryTag(CategoryTagID),
    TagName NVARCHAR(255),
    CreatedAt DATETIME
);

CREATE TABLE Squads (
    SquadID INT IDENTITY(1,1) PRIMARY KEY,
    SquadName NVARCHAR(255),
    Description NVARCHAR(MAX),
    CreatedAt DATETIME,
    UserID INT FOREIGN KEY REFERENCES Users(UserID),
    IsPublic BIT
);

CREATE TABLE SquadMembers (
    SquadMemberID INT IDENTITY(1,1) PRIMARY KEY,
    SquadID INT FOREIGN KEY REFERENCES Squads(SquadID),
    UserID INT FOREIGN KEY REFERENCES Users(UserID),
    JoinedAt DATETIME
);

CREATE TABLE UserTags (
    UserTagID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT FOREIGN KEY REFERENCES Users(UserID),
    TagID INT FOREIGN KEY REFERENCES Tags(TagID)
);

CREATE TABLE SourceCategory (
    SourceCategoryID INT PRIMARY KEY,
    Name NVARCHAR(MAX)
);

CREATE TABLE Sources (
    SourceID INT PRIMARY KEY,
    SourceName NVARCHAR(MAX),
    Url NVARCHAR(255),
    SourceCategoryID INT FOREIGN KEY REFERENCES SourceCategory(SourceCategoryID),
    CreatedAt DATETIME,
    Description NVARCHAR(MAX)
);

CREATE TABLE Posts (
    PostID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT FOREIGN KEY REFERENCES Users(UserID),
    SquadID INT FOREIGN KEY REFERENCES Squads(SquadID),
    SourceID INT FOREIGN KEY REFERENCES Sources(SourceID),
    Title NVARCHAR(255),
    Content NVARCHAR(MAX), 
    PostType NVARCHAR(50),
    ReadingTime INT,
    RssLink NVARCHAR(255),
    CreatedAt DATETIME,
    UpdatedAt DATETIME
);

CREATE TABLE Feeds (
    FeedID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT FOREIGN KEY REFERENCES Users(UserID)
);

CREATE TABLE FeedItems (
    FeedItemID INT IDENTITY(1,1) PRIMARY KEY,
    FeedID INT FOREIGN KEY REFERENCES Feeds(FeedID),
    PostID INT FOREIGN KEY REFERENCES Posts(PostID),
    TagID INT FOREIGN KEY REFERENCES Tags(TagID)
);

CREATE TABLE Votes (
    VoteID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT FOREIGN KEY REFERENCES Users(UserID),
    PostID INT FOREIGN KEY REFERENCES Posts(PostID),
    VoteType NVARCHAR(50)
);

CREATE TABLE Comments (
    CommentID INT IDENTITY(1,1) PRIMARY KEY,
    PostID INT FOREIGN KEY REFERENCES Posts(PostID),
    ParentCommentID INT NULL FOREIGN KEY REFERENCES Comments(CommentID),
    UserID INT FOREIGN KEY REFERENCES Users(UserID),
    Content NVARCHAR(MAX),
    UpsertedAt DATETIME
);

CREATE TABLE UserComments (
    CommentID INT FOREIGN KEY REFERENCES Comments(CommentID),
    UserID INT FOREIGN KEY REFERENCES Users(UserID),
    CreatedAt DATETIME,
    UpdatedAt DATETIME,
    PRIMARY KEY (CommentID, UserID)
);

CREATE TABLE PostTags (
    PostTagsID INT IDENTITY(1,1) PRIMARY KEY,
    PostID INT FOREIGN KEY REFERENCES Posts(PostID),
    TagID INT FOREIGN KEY REFERENCES Tags(TagID)
);

CREATE TABLE Bookmark (
    BookmarkID INT IDENTITY(1,1) PRIMARY KEY,
    PostID INT FOREIGN KEY REFERENCES Posts(PostID),
    UserID INT FOREIGN KEY REFERENCES Users(UserID),
    CreatedAt DATETIME
);
